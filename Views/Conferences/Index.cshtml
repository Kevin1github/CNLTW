@using ConferenceDelegateManagement1234122.Models
@using ConferenceDelegateManagement1234122.Data
@using ConferenceDelegateManagement1234122.Controllers
@model PaginatedList<Conference>
@{
    ViewData["Title"] = "Conferences";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Conferences</h1>
    <div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New
        </a>
    </div>
</div>

<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-8">
                <div class="input-group">
                    <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search by name, description or location...">
                    <button type="submit" class="btn btn-outline-primary">Search</button>
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-flex justify-content-end">
                    <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle-fill me-2"></i> No conferences found. Please add a new conference or modify your search criteria.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            Name
                            @{
                                string currentSort = ViewData["CurrentSort"] as string ?? "";
                            }
                            @if (currentSort == "name_desc")
                            {
                                <i class="bi bi-arrow-down-short"></i>
                            }
                            else if (currentSort == "")
                            {
                                <i class="bi bi-arrow-up-short"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            Date
                            @if ((ViewData["CurrentSort"]?.ToString() ?? "") == "date_desc")
                            {
                                <i class="bi bi-arrow-down-short"></i>
                            }
                            else if ((ViewData["CurrentSort"]?.ToString() ?? "") == "Date")
                            {
                                <i class="bi bi-arrow-up-short"></i>
                            }
                        </a>
                    </th>
                    <th>Location</th>
                    <th>Max Delegates</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>
                            @item.StartDate.ToString("MMM d, yyyy") - @item.EndDate.ToString("MMM d, yyyy")
                        </td>
                        <td>@item.Location</td>
                        <td>@item.MaximumDelegates</td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">
                                    <i class="bi bi-info-circle"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link">
                        Previous
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@i"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link">
                        @i
                    </a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link">
                        Next
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
}